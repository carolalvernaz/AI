# -*- coding: utf-8 -*-
"""Titanic_DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_oDBG1lu4Ljo1Nt1-GY_-70Jie0zG-7h

**Vamos experimentar agora o algoritmo Decision Tree?**
"""

!pip -q install yellowbrick
!pip install --upgrade sklearn

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
from sklearn.tree import DecisionTreeClassifier

import pickle
with open('titanic.pkl', 'rb') as f:
  X_treino, X_teste, y_treino, y_teste = pickle.load(f)

modelo = DecisionTreeClassifier(criterion='entropy', max_depth=4)

"""

> **Vamos testar o modelo?**

"""

modelo.fit(X_treino, y_treino)  # Treina o modelo
previsoes = modelo.predict(X_teste)  # Faz as previsões

previsoes

"""

> **Será se o modelo acertou?**

"""

y_teste

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
accuracy_score(y_teste,previsoes)

from yellowbrick.classifier import ConfusionMatrix
confusion_matrix(y_teste, previsoes)

cm = ConfusionMatrix(modelo)
cm.fit(X_treino, y_treino)
cm.score(X_teste, y_teste)

print(classification_report(y_teste, previsoes))

from sklearn import tree
previsores = X_treino.columns
figura, eixos = plt.subplots(nrows=1, ncols=1, figsize=(13,13))
tree.plot_tree(modelo, feature_names=previsores, class_names = modelo.classes_, filled=True);